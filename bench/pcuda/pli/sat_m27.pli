/* 
  * SAT.pli:
  * This P-Lingua program defines a family of recognizer P systems 
  * to solve the SAT problem.
  *
  * For more information about P-Lingua see http://www.gcn.us.es/plingua.htm
  *
  * Copyright (C) 2008  Ignacio Perez-Hurtado (perezh@us.es)
  *                     Research Group On Natural Computing
  *                     http://www.gcn.us.es
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  *  along with this program.  If not, see <http://www.gnu.org/licenses/>. 
  */

@model<membrane_division>

def Sat(m,n)
{
 /* Initial configuration */
 @mu = [[]'2]'1;

 /* Initial multisets */
 @ms(2) = d{1};

 /* Set of rules */
 [d{k}]'2 --> +[d{k}]-[d{k}] : 1 <= k <= n;

 {
  +[x{i,1} --> r{i,1}]'2;
  -[nx{i,1} --> r{i,1}]'2;
  -[x{i,1} --> #]'2;
  +[nx{i,1} --> #]'2;
 } : 1 <= i <= m;

 {
  +[x{i,j} --> x{i,j-1}]'2;
  -[x{i,j} --> x{i,j-1}]'2;
  +[nx{i,j} --> nx{i,j-1}]'2;
  -[nx{i,j} --> nx{i,j-1}]'2;
 } : 1<=i<=m, 2<=j<=n;

 {
  +[d{k}]'2 --> []d{k};
  -[d{k}]'2 --> []d{k};
 } : 1<=k<=n;

 d{k}[]'2 --> [d{k+1}] : 1<=k<=n-1;
 [r{i,k} --> r{i,k+1}]'2 : 1<=i<=m, 1<=k<=2*n-1;
 [d{k} --> d{k+1}]'1 : n <= k<= 3*n-3;
 [d{3*n-2} --> d{3*n-1},e]'1;
 e[]'2 --> +[c{1}];
 [d{3*n-1} --> d{3*n}]'1;
 [d{k} --> d{k+1}]'1 : 3*n <= k <= 3*n+2*m+2;
 +[r{1,2*n}]'2 --> -[]r{1,2*n};
 -[r{i,2*n} --> r{i-1,2*n}]'2 : 1<= i <= m;
 r{1,2*n}-[]'2 --> +[r{0,2*n}];
 -[c{k} --> c{k+1}]'2 : 1<=k<=m;
 +[c{m+1}]'2 --> +[]c{m+1};
 [c{m+1} --> c{m+2},t]'1;
 [t]'1 --> +[]t;
 +[c{m+2}]'1 --> -[]Yes;
 [d{3*n+2*m+3}]'1 --> +[]No;

} /* End of Sat module */

/* Main module */
def main()
{
 /* Call to Sat module for m=2 and n=16 */
 
  call Sat(32,15);
 
 /* Expansion of the input multiset */
 
 @ms(2) += nx{1,1},x{1,2},nx{1,6},x{1,7},nx{1,9},nx{1,13},nx{1,14},nx{1,15},x{2,1},nx{2,3},x{2,4},nx{2,9},nx{2,10},x{2,12},nx{2,14},nx{2,15},nx{3,1},x{3,2},x{3,7},nx{3,9},x{3,10},x{3,11},nx{3,14},nx{3,15},x{4,3},nx{4,8},nx{4,9},nx{4,10},nx{4,12},nx{4,13},x{4,14},nx{4,15},nx{5,2},x{5,5},nx{5,6},nx{5,7},x{5,9},nx{5,13},x{5,14},nx{5,15},x{6,2},nx{6,6},x{6,8},x{6,10},x{6,11},nx{6,13},x{6,14},nx{6,15},nx{7,2},nx{7,3},nx{7,4},nx{7,6},x{7,8},x{7,9},nx{7,12},nx{7,15},x{8,1},nx{8,2},nx{8,4},x{8,5},nx{8,9},x{8,10},nx{8,11},nx{8,15},x{9,1},x{9,4},nx{9,5},nx{9,6},nx{9,8},nx{9,9},x{9,11},nx{9,15},nx{10,1},nx{10,2},x{10,4},x{10,6},x{10,8},nx{10,9},x{10,12},nx{10,15},x{11,7},nx{11,8},x{11,10},x{11,11},x{11,12},x{11,13},x{11,14},nx{11,15},nx{12,2},x{12,5},nx{12,8},x{12,9},x{12,10},nx{12,13},nx{12,14},x{12,15},nx{13,1},x{13,3},nx{13,5},nx{13,6},x{13,8},x{13,11},nx{13,13},nx{13,14},x{14,2},nx{14,4},nx{14,6},nx{14,8},nx{14,10},nx{14,11},x{14,13},nx{14,14},nx{15,1},x{15,3},x{15,7},nx{15,8},nx{15,9},nx{15,11},x{15,12},nx{15,14},x{16,1},nx{16,3},nx{16,6},x{16,7},nx{16,8},x{16,9},nx{16,11},nx{16,14},nx{17,1},x{17,2},x{17,5},nx{17,6},nx{17,10},x{17,11},nx{17,14},x{17,15},x{18,1},nx{18,3},nx{18,7},nx{18,8},x{18,9},x{18,10},x{18,11},nx{18,14},nx{19,2},nx{19,3},nx{19,4},nx{19,5},x{19,9},x{19,11},x{19,13},nx{19,14},nx{20,1},x{20,2},nx{20,5},nx{20,7},nx{20,9},nx{20,10},nx{20,11},nx{20,13},nx{21,1},x{21,2},nx{21,3},nx{21,6},nx{21,7},x{21,9},nx{21,11},nx{21,13},x{22,2},x{22,3},nx{22,4},nx{22,5},x{22,6},nx{22,10},nx{22,11},nx{22,12},nx{23,1},nx{23,4},nx{23,5},x{23,8},nx{23,11},nx{23,12},x{23,13},x{23,14},nx{24,1},nx{24,2},x{24,3},x{24,5},x{24,6},nx{24,7},nx{24,10},nx{24,12},x{25,2},x{25,3},nx{25,4},x{25,5},x{25,6},x{25,7},x{25,9},nx{25,12},nx{26,2},x{26,3},x{26,5},x{26,9},x{26,10},x{26,11},nx{26,12},x{26,13},nx{27,3},nx{27,5},x{27,6},x{27,7},nx{27,8},nx{27,11},x{27,12},x{27,13},nx{28,1},x{28,2},x{28,6},x{28,9},nx{28,10},x{28,11},x{28,13},x{28,14},nx{29,2},x{29,3},x{29,5},x{29,6},nx{29,7},nx{29,9},x{29,10},x{29,12},x{30,2},nx{30,3},nx{30,7},nx{30,8},x{30,9},x{30,10},x{30,11},x{30,13},x{31,1},nx{31,2},x{31,3},nx{31,4},nx{31,5},nx{31,7},x{31,14},x{31,15},x{32,2},x{32,3},nx{32,5},nx{32,6},x{32,8},x{32,11},x{32,12},x{32,15};

;
 
 /* To define another P system of the family, call the Sat module with other parameters and 
    expand the input multiset with other values */
    
} /* End of main module */

