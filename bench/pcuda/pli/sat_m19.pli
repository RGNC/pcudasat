/* 
  * SAT.pli:
  * This P-Lingua program defines a family of recognizer P systems 
  * to solve the SAT problem.
  *
  * For more information about P-Lingua see http://www.gcn.us.es/plingua.htm
  *
  * Copyright (C) 2008  Ignacio Perez-Hurtado (perezh@us.es)
  *                     Research Group On Natural Computing
  *                     http://www.gcn.us.es
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  *  along with this program.  If not, see <http://www.gnu.org/licenses/>. 
  */

@model<membrane_division>

def Sat(m,n)
{
 /* Initial configuration */
 @mu = [[]'2]'1;

 /* Initial multisets */
 @ms(2) = d{1};

 /* Set of rules */
 [d{k}]'2 --> +[d{k}]-[d{k}] : 1 <= k <= n;

 {
  +[x{i,1} --> r{i,1}]'2;
  -[nx{i,1} --> r{i,1}]'2;
  -[x{i,1} --> #]'2;
  +[nx{i,1} --> #]'2;
 } : 1 <= i <= m;

 {
  +[x{i,j} --> x{i,j-1}]'2;
  -[x{i,j} --> x{i,j-1}]'2;
  +[nx{i,j} --> nx{i,j-1}]'2;
  -[nx{i,j} --> nx{i,j-1}]'2;
 } : 1<=i<=m, 2<=j<=n;

 {
  +[d{k}]'2 --> []d{k};
  -[d{k}]'2 --> []d{k};
 } : 1<=k<=n;

 d{k}[]'2 --> [d{k+1}] : 1<=k<=n-1;
 [r{i,k} --> r{i,k+1}]'2 : 1<=i<=m, 1<=k<=2*n-1;
 [d{k} --> d{k+1}]'1 : n <= k<= 3*n-3;
 [d{3*n-2} --> d{3*n-1},e]'1;
 e[]'2 --> +[c{1}];
 [d{3*n-1} --> d{3*n}]'1;
 [d{k} --> d{k+1}]'1 : 3*n <= k <= 3*n+2*m+2;
 +[r{1,2*n}]'2 --> -[]r{1,2*n};
 -[r{i,2*n} --> r{i-1,2*n}]'2 : 1<= i <= m;
 r{1,2*n}-[]'2 --> +[r{0,2*n}];
 -[c{k} --> c{k+1}]'2 : 1<=k<=m;
 +[c{m+1}]'2 --> +[]c{m+1};
 [c{m+1} --> c{m+2},t]'1;
 [t]'1 --> +[]t;
 +[c{m+2}]'1 --> -[]Yes;
 [d{3*n+2*m+3}]'1 --> +[]No;

} /* End of Sat module */

/* Main module */
def main()
{
 /* Call to Sat module for m=2 and n=16 */
 
  call Sat(64,7);
 
 /* Expansion of the input multiset */
 
 @ms(2) += nx{1,2},x{1,4},nx{1,6},nx{1,7},x{2,2},x{2,4},nx{2,6},nx{2,7},nx{3,1},nx{3,3},nx{3,5},nx{3,7},x{4,1},nx{4,2},nx{4,5},nx{4,7},nx{5,2},nx{5,5},x{5,6},nx{5,7},x{6,3},nx{6,5},x{6,6},nx{6,7},nx{7,1},x{7,3},nx{7,4},nx{7,7},x{8,1},x{8,2},nx{8,4},nx{8,7},x{9,1},x{9,3},nx{9,4},nx{9,7},x{10,1},nx{10,4},x{10,5},nx{10,7},x{11,2},x{11,3},nx{11,4},nx{11,7},nx{12,2},nx{12,3},x{12,5},nx{12,7},nx{13,1},nx{13,2},x{13,5},nx{13,7},x{14,1},nx{14,2},x{14,5},nx{14,7},nx{15,2},x{15,3},x{15,5},nx{15,7},x{16,2},x{16,4},x{16,5},nx{16,7},nx{17,3},nx{17,4},nx{17,5},nx{17,6},nx{18,3},nx{18,5},nx{18,6},x{18,7},nx{19,1},x{19,3},nx{19,5},nx{19,6},x{20,2},x{20,3},nx{20,5},nx{20,6},x{21,2},nx{21,5},nx{21,6},x{21,7},x{22,1},nx{22,2},nx{22,4},nx{22,6},nx{23,2},nx{23,4},x{23,5},nx{23,6},nx{24,2},nx{24,4},nx{24,6},x{24,7},x{25,3},nx{25,4},x{25,5},nx{25,6},nx{26,1},nx{26,3},x{26,5},nx{26,6},x{27,1},nx{27,3},x{27,5},nx{27,6},nx{28,1},nx{28,2},x{28,5},nx{28,6},nx{29,1},x{29,2},nx{29,6},x{29,7},x{30,1},x{30,3},x{30,5},nx{30,6},x{31,2},x{31,3},nx{31,6},x{31,7},nx{32,3},nx{32,4},nx{32,5},x{32,7},x{33,1},x{33,3},nx{33,4},nx{33,5},nx{34,1},nx{34,3},nx{34,5},x{34,6},x{35,2},nx{35,3},nx{35,5},x{35,7},x{36,1},nx{36,2},x{36,3},nx{36,5},x{37,1},nx{37,2},nx{37,5},x{37,6},nx{38,1},x{38,4},nx{38,5},x{38,6},x{39,1},x{39,2},x{39,4},nx{39,5},x{40,3},x{40,4},nx{40,5},x{40,6},nx{41,2},nx{41,3},nx{41,4},x{41,7},nx{42,1},nx{42,3},nx{42,4},x{42,5},nx{43,1},nx{43,3},nx{43,4},x{43,6},nx{44,3},nx{44,4},x{44,5},x{44,6},nx{45,3},nx{45,4},x{45,5},x{45,7},nx{46,2},nx{46,4},x{46,5},x{46,7},nx{47,2},nx{47,4},x{47,6},x{47,7},nx{48,1},x{48,3},nx{48,4},x{48,6},x{49,1},nx{49,4},x{49,5},x{49,7},nx{50,1},nx{50,2},nx{50,3},x{50,4},x{51,1},nx{51,2},nx{51,3},x{51,5},x{52,1},nx{52,2},nx{52,3},x{52,6},nx{53,1},nx{53,3},x{53,4},x{53,7},nx{54,1},nx{54,3},x{54,5},x{54,6},x{55,2},nx{55,3},x{55,4},x{55,5},x{56,1},nx{56,2},x{56,3},x{56,7},nx{57,2},x{57,4},x{57,6},x{57,7},nx{58,1},x{58,3},x{58,5},x{58,6},nx{59,1},x{59,3},x{59,6},x{59,7},x{60,1},x{60,2},x{60,3},x{60,4},x{61,1},x{61,3},x{61,4},x{61,7},x{62,2},x{62,4},x{62,5},x{62,6},x{63,2},x{63,4},x{63,6},x{63,7},x{64,2},x{64,5},x{64,6},x{64,7};

;
 
 /* To define another P system of the family, call the Sat module with other parameters and 
    expand the input multiset with other values */
    
} /* End of main module */

