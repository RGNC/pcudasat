/* 
  * SAT.pli:
  * This P-Lingua program defines a family of recognizer P systems 
  * to solve the SAT problem.
  *
  * For more information about P-Lingua see http://www.gcn.us.es/plingua.htm
  *
  * Copyright (C) 2008  Ignacio Perez-Hurtado (perezh@us.es)
  *                     Research Group On Natural Computing
  *                     http://www.gcn.us.es
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  *  along with this program.  If not, see <http://www.gnu.org/licenses/>. 
  */

@model<membrane_division>

def Sat(m,n)
{
 /* Initial configuration */
 @mu = [[]'2]'1;

 /* Initial multisets */
 @ms(2) = d{1};

 /* Set of rules */
 [d{k}]'2 --> +[d{k}]-[d{k}] : 1 <= k <= n;

 {
  +[x{i,1} --> r{i,1}]'2;
  -[nx{i,1} --> r{i,1}]'2;
  -[x{i,1} --> #]'2;
  +[nx{i,1} --> #]'2;
 } : 1 <= i <= m;

 {
  +[x{i,j} --> x{i,j-1}]'2;
  -[x{i,j} --> x{i,j-1}]'2;
  +[nx{i,j} --> nx{i,j-1}]'2;
  -[nx{i,j} --> nx{i,j-1}]'2;
 } : 1<=i<=m, 2<=j<=n;

 {
  +[d{k}]'2 --> []d{k};
  -[d{k}]'2 --> []d{k};
 } : 1<=k<=n;

 d{k}[]'2 --> [d{k+1}] : 1<=k<=n-1;
 [r{i,k} --> r{i,k+1}]'2 : 1<=i<=m, 1<=k<=2*n-1;
 [d{k} --> d{k+1}]'1 : n <= k<= 3*n-3;
 [d{3*n-2} --> d{3*n-1},e]'1;
 e[]'2 --> +[c{1}];
 [d{3*n-1} --> d{3*n}]'1;
 [d{k} --> d{k+1}]'1 : 3*n <= k <= 3*n+2*m+2;
 +[r{1,2*n}]'2 --> -[]r{1,2*n};
 -[r{i,2*n} --> r{i-1,2*n}]'2 : 1<= i <= m;
 r{1,2*n}-[]'2 --> +[r{0,2*n}];
 -[c{k} --> c{k+1}]'2 : 1<=k<=m;
 +[c{m+1}]'2 --> +[]c{m+1};
 [c{m+1} --> c{m+2},t]'1;
 [t]'1 --> +[]t;
 +[c{m+2}]'1 --> -[]Yes;
 [d{3*n+2*m+3}]'1 --> +[]No;

} /* End of Sat module */

/* Main module */
def main()
{
 /* Call to Sat module for m=2 and n=16 */
 
  call Sat(64,10);
 
 /* Expansion of the input multiset */
 
 @ms(2) += x{1,2},x{1,3},nx{1,4},x{1,5},nx{1,6},nx{1,7},nx{1,9},nx{1,10},x{2,3},x{2,4},nx{2,5},x{2,6},nx{2,7},x{2,8},nx{2,9},nx{2,10},x{3,1},nx{3,4},x{3,5},x{3,6},nx{3,7},x{3,8},nx{3,9},nx{3,10},x{4,1},nx{4,2},x{4,3},x{4,5},x{4,6},nx{4,7},nx{4,9},nx{4,10},x{5,2},nx{5,3},x{5,4},nx{5,6},x{5,7},x{5,8},nx{5,9},nx{5,10},nx{6,1},nx{6,2},x{6,3},nx{6,5},x{6,6},x{6,7},nx{6,9},nx{6,10},x{7,1},x{7,2},x{7,3},nx{7,4},nx{7,5},nx{7,7},nx{7,8},nx{7,10},x{8,1},x{8,2},nx{8,3},x{8,4},nx{8,5},nx{8,6},nx{8,8},nx{8,10},x{9,2},x{9,3},nx{9,5},nx{9,6},x{9,7},nx{9,8},x{9,9},nx{9,10},nx{10,1},x{10,2},x{10,3},x{10,5},x{10,6},x{10,7},nx{10,8},nx{10,10},nx{11,1},nx{11,2},x{11,3},nx{11,4},nx{11,6},nx{11,7},x{11,9},nx{11,10},nx{12,1},nx{12,2},x{12,3},nx{12,5},x{12,6},nx{12,7},x{12,8},nx{12,10},x{13,1},nx{13,2},nx{13,3},nx{13,4},x{13,5},nx{13,7},x{13,9},nx{13,10},nx{14,2},nx{14,3},x{14,4},x{14,5},nx{14,7},x{14,8},x{14,9},nx{14,10},x{15,1},x{15,2},nx{15,3},x{15,4},x{15,5},x{15,6},nx{15,7},nx{15,10},x{16,1},nx{16,3},x{16,5},x{16,6},nx{16,7},x{16,8},x{16,9},nx{16,10},nx{17,1},nx{17,2},x{17,4},x{17,6},nx{17,7},x{17,8},x{17,9},nx{17,10},x{18,1},nx{18,2},nx{18,3},x{18,4},nx{18,6},x{18,7},x{18,8},nx{18,10},nx{19,1},nx{19,2},x{19,5},nx{19,6},x{19,7},x{19,8},x{19,9},nx{19,10},x{20,1},x{20,2},x{20,3},x{20,4},x{20,5},nx{20,6},x{20,8},nx{20,10},nx{21,1},x{21,3},nx{21,4},nx{21,5},x{21,7},x{21,8},x{21,9},nx{21,10},x{22,1},x{22,2},nx{22,4},nx{22,5},x{22,7},x{22,8},x{22,9},nx{22,10},x{23,1},x{23,2},nx{23,3},x{23,4},nx{23,5},x{23,8},x{23,9},nx{23,10},x{24,2},nx{24,3},x{24,4},x{24,6},x{24,7},x{24,8},x{24,9},nx{24,10},x{25,1},x{25,2},x{25,3},x{25,5},nx{25,6},x{25,7},nx{25,8},nx{25,9},nx{26,1},x{26,2},nx{26,3},nx{26,4},nx{26,5},x{26,6},nx{26,8},nx{26,9},nx{27,1},nx{27,2},x{27,4},nx{27,5},x{27,7},nx{27,8},nx{27,9},x{27,10},nx{28,1},x{28,3},nx{28,4},x{28,6},x{28,7},nx{28,8},nx{28,9},x{28,10},nx{29,1},x{29,2},x{29,3},x{29,4},x{29,7},nx{29,8},nx{29,9},x{29,10},x{30,1},nx{30,2},nx{30,3},nx{30,4},nx{30,5},nx{30,6},nx{30,7},nx{30,9},nx{31,1},nx{31,3},nx{31,4},x{31,5},x{31,6},nx{31,7},x{31,8},nx{31,9},nx{32,2},x{32,3},x{32,4},nx{32,5},nx{32,6},x{32,8},nx{32,9},x{32,10},x{33,1},x{33,2},x{33,3},nx{33,4},x{33,5},nx{33,6},x{33,7},nx{33,9},nx{34,1},x{34,2},nx{34,3},x{34,4},x{34,5},nx{34,6},x{34,7},nx{34,9},nx{35,2},x{35,3},nx{35,4},nx{35,5},x{35,6},x{35,7},x{35,8},nx{35,9},nx{36,1},nx{36,3},x{36,5},x{36,6},x{36,7},x{36,8},nx{36,9},x{36,10},nx{37,1},x{37,4},x{37,5},x{37,6},x{37,7},x{37,8},nx{37,9},x{37,10},x{38,1},x{38,2},x{38,3},nx{38,5},nx{38,6},nx{38,7},nx{38,8},x{38,10},x{39,2},x{39,3},x{39,4},nx{39,5},nx{39,6},nx{39,7},nx{39,8},x{39,10},nx{40,1},nx{40,2},nx{40,3},nx{40,4},x{40,5},nx{40,7},nx{40,8},x{40,10},nx{41,1},x{41,2},nx{41,3},nx{41,4},nx{41,5},nx{41,6},x{41,7},nx{41,8},nx{42,2},x{42,3},x{42,4},nx{42,6},x{42,7},nx{42,8},x{42,9},x{42,10},nx{43,2},nx{43,4},nx{43,5},x{43,6},x{43,7},nx{43,8},x{43,9},x{43,10},x{44,2},nx{44,4},nx{44,5},x{44,6},x{44,7},nx{44,8},x{44,9},x{44,10},x{45,2},nx{45,3},nx{45,4},x{45,6},x{45,7},nx{45,8},x{45,9},x{45,10},nx{46,2},x{46,3},nx{46,4},x{46,5},x{46,6},x{46,7},nx{46,8},x{46,9},nx{47,1},x{47,2},nx{47,3},x{47,6},x{47,7},nx{47,8},x{47,9},x{47,10},nx{48,1},x{48,3},nx{48,4},nx{48,5},nx{48,6},nx{48,7},x{48,8},x{48,9},x{49,1},x{49,2},nx{49,3},nx{49,4},nx{49,5},nx{49,7},x{49,8},x{49,9},x{50,1},x{50,2},x{50,3},x{50,4},nx{50,5},nx{50,7},x{50,9},x{50,10},nx{51,1},nx{51,2},nx{51,3},nx{51,4},x{51,5},nx{51,7},x{51,9},x{51,10},nx{52,1},x{52,2},x{52,3},x{52,6},nx{52,7},x{52,8},x{52,9},x{52,10},nx{53,1},x{53,2},x{53,3},nx{53,4},nx{53,5},nx{53,6},x{53,8},x{53,10},x{54,1},x{54,2},nx{54,3},nx{54,5},nx{54,6},x{54,7},x{54,8},x{54,10},nx{55,1},nx{55,2},x{55,3},nx{55,6},x{55,7},x{55,8},x{55,9},x{55,10},x{56,2},x{56,3},x{56,4},x{56,5},nx{56,6},x{56,7},x{56,8},x{56,10},nx{57,2},x{57,3},nx{57,4},nx{57,5},x{57,7},x{57,8},x{57,9},x{57,10},nx{58,1},nx{58,2},x{58,4},nx{58,5},x{58,7},x{58,8},x{58,9},x{58,10},nx{59,2},x{59,3},x{59,4},nx{59,5},x{59,6},x{59,7},x{59,9},x{59,10},nx{60,1},x{60,3},x{60,4},nx{60,5},x{60,6},x{60,7},x{60,9},x{60,10},x{61,1},nx{61,3},nx{61,4},x{61,5},x{61,6},x{61,8},x{61,9},x{61,10},x{62,1},nx{62,2},x{62,3},nx{62,4},x{62,7},x{62,8},x{62,9},x{62,10},x{63,1},nx{63,2},nx{63,3},x{63,4},x{63,5},x{63,6},x{63,9},x{63,10},x{64,1},x{64,2},nx{64,3},x{64,4},x{64,5},x{64,6},x{64,8},x{64,10};

;
 
 /* To define another P system of the family, call the Sat module with other parameters and 
    expand the input multiset with other values */
    
} /* End of main module */

